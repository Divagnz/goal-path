name: CD - Continuous Deployment

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI - Continuous Integration"]
    types: [completed]
    branches: [ main ]

env:
  NOMAD_ADDR: "http://192.168.0.174:4646"
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build and Push Image
    runs-on: [self-hosted, linux]
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/goalpath
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
        
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    name: Deploy to Staging
    runs-on: [self-hosted, linux]
    needs: build
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Staging Nomad
      env:
        IMAGE_TAG: ${{ needs.build.outputs.image-tag }}
        ENVIRONMENT: staging
        NOMAD_URL: "http://192.168.0.174:4646"
      run: |
        chmod +x scripts/nomad/deploy.sh
        ./scripts/nomad/deploy.sh
        
    - name: Verify deployment
      run: |
        sleep 30
        curl -f "http://192.168.0.174:4646/v1/job/goalpath-staging" || echo "Job status check failed"

  deploy-production:
    name: Deploy to Production
    runs-on: [self-hosted, linux]
    needs: [build, deploy-staging]
    environment: production
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Production Nomad
      env:
        IMAGE_TAG: ${{ needs.build.outputs.image-tag }}
        ENVIRONMENT: production
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        chmod +x scripts/nomad/deploy.sh
        ./scripts/nomad/deploy.sh
